{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","cn","to","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","handleSelectedPerson","sex","slug","onClick","name","PeopleTable","peopleList","useState","selectedPerson","setSelectedPerson","findParent","people","parentName","find","map","mother","motherName","father","fatherName","human","born","died","PeoplePage","setPeopleList","isError","setIsError","isLoading","setIsLoading","isEmpty","setIsEmpty","useEffect","length","catch","finally","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c5671395.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => cn(\n              'navbar-item',\n              {\n                'has-background-grey-lighter': isActive,\n              },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => cn(\n              'navbar-item',\n              {\n                'has-background-grey-lighter': isActive,\n              },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n  handleSelectedPerson: (human: string) => void;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  handleSelectedPerson,\n}) => {\n  return (\n    <Link\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n      to={`/people/${person.slug}`}\n      onClick={() => handleSelectedPerson(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useState } from 'react';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  peopleList: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ peopleList }) => {\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  const findParent = (people: Person[], parentName: string | null) => {\n    return people.find(person => person.name === parentName);\n  };\n\n  const peopleWithParents = () => {\n    return peopleList.map(person => ({\n      ...person,\n      mother: findParent(peopleList, person.motherName),\n      father: findParent(peopleList, person.fatherName),\n    }));\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleWithParents().map(human => (\n          <tr\n            className={cn(\n              { 'has-background-warning': selectedPerson === human.slug },\n            )}\n            data-cy=\"person\"\n            key={human.slug}\n          >\n            <td>\n              <PersonLink\n                person={human}\n                handleSelectedPerson={setSelectedPerson}\n              />\n            </td>\n\n            <td>{human.sex}</td>\n            <td>{human.born}</td>\n            <td>{human.died}</td>\n            <td>\n              {human.mother\n                ? (\n                  <PersonLink\n                    person={human.mother}\n                    handleSelectedPerson={setSelectedPerson}\n                  />\n                )\n                : human.motherName || '-'}\n            </td>\n            <td>\n              {human.father\n                ? (\n                  <PersonLink\n                    person={human.father}\n                    handleSelectedPerson={setSelectedPerson}\n                  />\n                )\n                : human.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => {\n        response.length > 0\n          ? setPeopleList(response)\n          : setIsEmpty(true);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {isEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          <PeopleTable peopleList={peopleList} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"/people\"\n              element={<PeoplePage />}\n            >\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}